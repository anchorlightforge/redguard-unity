name: Build and Upload
on:
  push:
    branches: [ cicdtest ]

jobs:
  build-game:
    strategy:
      matrix:
        include:
          - target-platform: StandaloneWindows64
            display-name: Windows 64-bit
            build-on: windows-2022
          - target-platform: StandaloneLinux64
            display-name: Linux 64-bit
            build-on: ubuntu-latest
          - target-platform: StandaloneOSX
            display-name: MacOSX 64-bit
            build-on: macos-latest
    runs-on: ${{ matrix.build-on }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        lfs: true
    #- name: Get Unity Version
      #todo: Get ProjectSettings/version and store as var 
    - name: Build Unity application
      uses: game-ci/unity-builder@v2
      env:
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      with:
        unityVersion: auto #See Get Unity Version step
        targetPlatform: ${{ matrix.target-platform }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Build
        path: build
  build-launcher:
    strategy:
      matrix:
        include:
          - target-platform: win64
            preset-platform: windows
            display-name: Windows 64-bit
            build-on: windows-2022
          - target-platform: linux
            preset-platform: linux
            display-name: Linux 64-bit
            build-on: ubuntu-latest
          - target-platform: mac
            preset-platform: mac
            display-name: MacOSX 64-bit
            build-on: macos-latest
    steps:
      - name: Checkout code
        #uses: actions/checkout@v3
        #todo: This should go to the RGU Launcher repo, not RGUnity-master
        with:
          lfs: true
        run: |
          git config --global url.https://github.com/RGUnity/rgu-launcher
          git clone https://github.com/RGUnity/rgu-launcher.git

      - name: Build GODOT application
        id: build
        uses: manleydev/build-godot-action@v1.4.1
        with:
          name: rgu-launcher
          preset: ${{ matrix.preset-platform }}
          projectDir: "" # The project in the `` directory will be built
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: Client - ${{ matrix.target-platform }}
          path: ${{ github.workspace }}/${{ steps.build.outputs.build }}
  upload-release:
    strategy:
      matrix:
        include:
          - target-platform: Windows
            build-on: windows-2022
          - target-platform: Linux
            build-on: ubuntu-latest
          - target-platform: OSX
            build-on: macos-latest
    runs-on: windows-2022
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
    - name: "Set current date as env variable"
      run: |
        echo "builddate=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      id: version  # this is used on variable path
    - name: Extract and organize application
      shell: pwsh
      run: |
            echo "Compile Windows launcher + game"
            echo "Compile Mac OSX launcher + game"
            echo "Compile Linux launcher + game"
      
    - name: Publishing Release
      uses: softprops/action-gh-release@v1
      with:  
        tag_name: ${{ steps.version.outputs.builddate }}
        name: 
        body: "your date"
    - name: Upload application snapshot
      uses: "softprops/action-gh-release@v1"
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        name: RGUnity Snapshot ${{ steps.version.outputs.builddate }}
        tag_name: "snapshot"
        prerelease: true
        generate_release_notes: true
        files: | 
          +snapshot*.zip
      

    
    